include: '.gitlab-tasks.yml'

default:
  image: python:3.8

stages:
  - test
  - netlify
  - build-staging
  - deploy-staging

test-and-lint-backend:
  stage: test
  variables:
    POSTGRES_PASSWORD: unsafe
  services:
    - postgres:latest
  script:
    - cd backend
    - pip install -r requirements/test.txt
    - flake8
    - pytest -c pytest-ci.ini
  tags:
    - docker

test-frontend:
  stage: test
  image: node:13.6.0-alpine3.11
  script:
    - cd frontend
    - "! grep -ir 'console.log' src/"
    - npm install
    - npm run test
  tags:
    - docker

netlify-forge-docs:
  stage: netlify
  tags:
    - docker-privileged
  image: node:lts-alpine3.14
  script:
    - NPM_CONFIG_PREFIX=/home/node/.npm-global
    - PATH=$PATH:/home/node/.npm-global/bin
    - npm i -g --unsafe-perm netlify-cli
    - cd docs && npm install && npm run build
    - netlify deploy --site $NETLIFY_SITE_ID_DOCS --auth $NETLIFY_AUTH_TOKEN --prod

netlify-forge-styleguide:
  image: node:lts-alpine3.14
  tags:
    - docker-privileged
  stage: netlify
  script:
    - NPM_CONFIG_PREFIX=/home/node/.npm-global
    - PATH=$PATH:/home/node/.npm-global/bin
    - npm i -g --unsafe-perm netlify-cli
    - cd frontend && npm install && npm run build:styleguide
    - netlify deploy --site $NETLIFY_SITE_ID_STYLEGUIDE --auth $NETLIFY_AUTH_TOKEN --prod

build-staging:
  stage: build-staging
  extends:
    - .build-definition
  only:
      - develop
  variables:
    ENVIRONMENT: staging

deploy-staging:
  stage: deploy-staging
  extends:
    - .deploy-definition
  only:
    - develop
  environment:
    name: staging
  variables:
    DEPLOYMENT_TARGET_HOST: $STAGING_DOMAIN
    DEPLOYMENT_SSH_KEY: $STAGING_SSH_PRIVATE_KEY
    ENVIRONMENT: staging
